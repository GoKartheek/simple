{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _Array$isArray from \"@babel/runtime-corejs2/core-js/array/is-array\";\nexport default (function (initialLng, fallbackLng, otherLanguages) {\n  var languages = [];\n\n  if (initialLng) {\n    languages.push(initialLng);\n  }\n\n  if (fallbackLng) {\n    if (typeof fallbackLng === 'string' && fallbackLng !== initialLng) {\n      languages.push(fallbackLng);\n    }\n\n    if (_Array$isArray(fallbackLng)) {\n      languages.push.apply(languages, _toConsumableArray(fallbackLng));\n    } else if (initialLng) {\n      if (typeof fallbackLng[initialLng] === 'string') {\n        languages.push(fallbackLng[initialLng]);\n      } else if (_Array$isArray(fallbackLng[initialLng])) {\n        languages.push.apply(languages, _toConsumableArray(fallbackLng[initialLng]));\n      }\n    }\n\n    if (fallbackLng[\"default\"]) {\n      languages.push(fallbackLng[\"default\"]);\n    }\n  }\n\n  if (initialLng && initialLng.includes('-') && _Array$isArray(otherLanguages)) {\n    var _initialLng$split = initialLng.split('-'),\n        _initialLng$split2 = _slicedToArray(_initialLng$split, 1),\n        languageFromLocale = _initialLng$split2[0];\n\n    otherLanguages.forEach(function (otherLanguage) {\n      if (otherLanguage === languageFromLocale) {\n        languages.push(otherLanguage);\n      }\n    });\n  }\n\n  return languages;\n});","map":{"version":3,"sources":["/Users/kartheek/Desktop/zenrays/next/lang/simple/utils/lngs-to-load.js"],"names":["initialLng","fallbackLng","otherLanguages","languages","push","includes","split","languageFromLocale","forEach","otherLanguage"],"mappings":";;;AAAA,gBAAe,UAACA,UAAD,EAAaC,WAAb,EAA0BC,cAA1B,EAA6C;AAC1D,MAAMC,SAAS,GAAG,EAAlB;;AAEA,MAAIH,UAAJ,EAAgB;AACdG,IAAAA,SAAS,CAACC,IAAV,CAAeJ,UAAf;AACD;;AAED,MAAIC,WAAJ,EAAiB;AACf,QAAI,OAAOA,WAAP,KAAuB,QAAvB,IAAmCA,WAAW,KAAKD,UAAvD,EAAmE;AACjEG,MAAAA,SAAS,CAACC,IAAV,CAAeH,WAAf;AACD;;AAED,QAAI,eAAcA,WAAd,CAAJ,EAAgC;AAC9BE,MAAAA,SAAS,CAACC,IAAV,OAAAD,SAAS,qBAASF,WAAT,EAAT;AACD,KAFD,MAEO,IAAID,UAAJ,EAAgB;AACrB,UAAI,OAAOC,WAAW,CAACD,UAAD,CAAlB,KAAmC,QAAvC,EAAiD;AAC/CG,QAAAA,SAAS,CAACC,IAAV,CAAeH,WAAW,CAACD,UAAD,CAA1B;AACD,OAFD,MAEO,IAAI,eAAcC,WAAW,CAACD,UAAD,CAAzB,CAAJ,EAA4C;AACjDG,QAAAA,SAAS,CAACC,IAAV,OAAAD,SAAS,qBAASF,WAAW,CAACD,UAAD,CAApB,EAAT;AACD;AACF;;AAED,QAAIC,WAAW,WAAf,EAAyB;AACvBE,MAAAA,SAAS,CAACC,IAAV,CAAeH,WAAW,WAA1B;AACD;AACF;;AAED,MAAID,UAAU,IAAIA,UAAU,CAACK,QAAX,CAAoB,GAApB,CAAd,IAA0C,eAAcH,cAAd,CAA9C,EAA6E;AAAA,4BAC9CF,UAAU,CAACM,KAAX,CAAiB,GAAjB,CAD8C;AAAA;AAAA,QACpEC,kBADoE;;AAE3EL,IAAAA,cAAc,CAACM,OAAf,CAAuB,UAACC,aAAD,EAAmB;AACxC,UAAIA,aAAa,KAAKF,kBAAtB,EAA0C;AACxCJ,QAAAA,SAAS,CAACC,IAAV,CAAeK,aAAf;AACD;AACF,KAJD;AAKD;;AAED,SAAON,SAAP;AACD,CArCD","sourcesContent":["export default (initialLng, fallbackLng, otherLanguages) => {\n  const languages = []\n\n  if (initialLng) {\n    languages.push(initialLng)\n  }\n\n  if (fallbackLng) {\n    if (typeof fallbackLng === 'string' && fallbackLng !== initialLng) {\n      languages.push(fallbackLng)\n    }\n\n    if (Array.isArray(fallbackLng)) {\n      languages.push(...fallbackLng)\n    } else if (initialLng) {\n      if (typeof fallbackLng[initialLng] === 'string') {\n        languages.push(fallbackLng[initialLng])\n      } else if (Array.isArray(fallbackLng[initialLng])) {\n        languages.push(...fallbackLng[initialLng])\n      }\n    }\n\n    if (fallbackLng.default) {\n      languages.push(fallbackLng.default)\n    }\n  }\n\n  if (initialLng && initialLng.includes('-') && Array.isArray(otherLanguages)) {\n    const [languageFromLocale] = initialLng.split('-')\n    otherLanguages.forEach((otherLanguage) => {\n      if (otherLanguage === languageFromLocale) {\n        languages.push(otherLanguage)\n      }\n    })\n  }\n\n  return languages\n}\n"]},"metadata":{},"sourceType":"module"}