{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nimport _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nvar __jsx = React.createElement;\n\n/*\n  This `Link` component is a wrap of the standard\n  NextJs `Link` component, with some simple lang\n  redirect logic in place.\n  If you haven't already, read this issue comment:\n  https://github.com/zeit/next.js/issues/2833#issuecomment-414919347\n  This component automatically provides this functionality:\n  <Link href=\"/product?slug=something\" as=\"/products/something\">\n  Wherein `slug` is actually our i18n lang, and it gets\n  pulled automatically.\n  Very important: if you import `Link` from NextJs directly,\n  and not this file, your lang subpath routing will break.\n*/\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport NextLink from 'next/link';\nimport { withTranslation } from 'react-i18next'; // import { I18n, Config } from '../../types.d'\n\nimport { lngPathCorrector, subpathIsRequired } from '../utils';\nimport nextI18next from '../i18n';\nimport withInternals from '../hocs/with-internals';\n\nconst removeWithTranslationProps = props => {\n  const strippedProps = _Object$assign({}, props);\n\n  delete strippedProps.defaultNS;\n  delete strippedProps.i18n;\n  delete strippedProps.i18nOptions;\n  delete strippedProps.lng;\n  delete strippedProps.reportNS;\n  delete strippedProps.t;\n  delete strippedProps.tReady;\n  delete strippedProps.forwardedRef;\n  return strippedProps;\n};\n\nclass Link extends React.Component {\n  //   static defaultProps = {\n  //     as: undefined,\n  //   }\n  render() {\n    const _this$props = this.props,\n          {\n      as,\n      children,\n      href,\n      i18n,\n      nextI18NextInternals\n    } = _this$props,\n          props = _objectWithoutProperties(_this$props, [\"as\", \"children\", \"href\", \"i18n\", \"nextI18NextInternals\"]);\n\n    console.log('*', this.props);\n    const {\n      language\n    } = i18n;\n    const {\n      config\n    } = nextI18NextInternals;\n\n    if (subpathIsRequired(config, language)) {\n      const {\n        as: correctedAs,\n        href: correctedHref\n      } = lngPathCorrector(config, {\n        as,\n        href\n      }, language);\n      return __jsx(NextLink, _extends({\n        href: correctedHref,\n        as: correctedAs\n      }, removeWithTranslationProps(props)), children);\n    }\n\n    return __jsx(NextLink, _extends({\n      href: href,\n      as: as\n    }, removeWithTranslationProps(props)), children);\n  }\n\n}\n\nLink.propTypes = {\n  as: PropTypes.string,\n  children: PropTypes.node.isRequired,\n  href: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\n  nextI18NextInternals: PropTypes.shape({\n    config: PropTypes.shape({\n      defaultLanguage: PropTypes.string.isRequired,\n      localeSubpaths: PropTypes.object.isRequired\n    }).isRequired\n  }).isRequired,\n  i18n: PropTypes.object\n};\nconst nextI18NextInternals = {\n  config: nextI18next.config,\n  i18n: nextI18next.i18n\n};\n/*\n  Usage of `withTranslation` here is just to\n  force `Link` to rerender on language change\n*/\n\nexport default withInternals(withTranslation()(Link), nextI18NextInternals);","map":{"version":3,"sources":["/Users/kartheek/Desktop/zenrays/next/lang/simple/components/Link.js"],"names":["React","PropTypes","NextLink","withTranslation","lngPathCorrector","subpathIsRequired","nextI18next","withInternals","removeWithTranslationProps","props","strippedProps","defaultNS","i18n","i18nOptions","lng","reportNS","t","tReady","forwardedRef","Link","Component","render","as","children","href","nextI18NextInternals","console","log","language","config","correctedAs","correctedHref","propTypes","string","node","isRequired","oneOfType","object","shape","defaultLanguage","localeSubpaths"],"mappings":"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","sourcesContent":["/*\n  This `Link` component is a wrap of the standard\n  NextJs `Link` component, with some simple lang\n  redirect logic in place.\n  If you haven't already, read this issue comment:\n  https://github.com/zeit/next.js/issues/2833#issuecomment-414919347\n  This component automatically provides this functionality:\n  <Link href=\"/product?slug=something\" as=\"/products/something\">\n  Wherein `slug` is actually our i18n lang, and it gets\n  pulled automatically.\n  Very important: if you import `Link` from NextJs directly,\n  and not this file, your lang subpath routing will break.\n*/\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport NextLink from 'next/link'\nimport { withTranslation } from 'react-i18next'\n\n// import { I18n, Config } from '../../types.d'\nimport { lngPathCorrector, subpathIsRequired } from '../utils'\nimport nextI18next from '../i18n'\nimport withInternals from '../hocs/with-internals'\n\nconst removeWithTranslationProps = (props) => {\n  const strippedProps = Object.assign({}, props)\n  delete strippedProps.defaultNS\n  delete strippedProps.i18n\n  delete strippedProps.i18nOptions\n  delete strippedProps.lng\n  delete strippedProps.reportNS\n  delete strippedProps.t\n  delete strippedProps.tReady\n  delete strippedProps.forwardedRef\n  return strippedProps\n}\n\nclass Link extends React.Component {\n\n//   static defaultProps = {\n//     as: undefined,\n//   }\n\n  render() {\n    const {\n      as, children, href, i18n, nextI18NextInternals, ...props\n    } = this.props\n    console.log('*', this.props)\n    const { language } = i18n\n    const { config } = nextI18NextInternals\n\n    if (subpathIsRequired(config, language)) {\n      const { as: correctedAs, href: correctedHref } = lngPathCorrector(\n        config, { as, href }, language,\n      )\n      return (\n        <NextLink\n          href={correctedHref}\n          as={correctedAs}\n          {...removeWithTranslationProps(props)}\n        >\n          {children}\n        </NextLink>\n      )\n    }\n\n    return (\n      <NextLink\n        href={href}\n        as={as}\n        {...removeWithTranslationProps(props)}\n      >\n        {children}\n      </NextLink>\n    )\n  }\n}\n\nLink.propTypes = {\n    as: PropTypes.string,\n    children: PropTypes.node.isRequired,\n    href: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.object,\n    ]).isRequired,\n    nextI18NextInternals: PropTypes.shape({\n        config: PropTypes.shape({\n        defaultLanguage: PropTypes.string.isRequired,\n        localeSubpaths: PropTypes.object.isRequired,\n        }).isRequired,\n    }).isRequired,\n    i18n: PropTypes.object,\n}\n\nconst nextI18NextInternals = { config: nextI18next.config, i18n: nextI18next.i18n }\n\n/*\n  Usage of `withTranslation` here is just to\n  force `Link` to rerender on language change\n*/\nexport default withInternals(withTranslation()(Link), nextI18NextInternals)"]},"metadata":{},"sourceType":"module"}