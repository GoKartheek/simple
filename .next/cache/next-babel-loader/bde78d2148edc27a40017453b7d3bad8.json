{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nvar __jsx = React.createElement;\n\n/*\n  This `Link` component is a wrap of the standard\n  NextJs `Link` component, with some simple lang\n  redirect logic in place.\n  If you haven't already, read this issue comment:\n  https://github.com/zeit/next.js/issues/2833#issuecomment-414919347\n  This component automatically provides this functionality:\n  <Link href=\"/product?slug=something\" as=\"/products/something\">\n  Wherein `slug` is actually our i18n lang, and it gets\n  pulled automatically.\n  Very important: if you import `Link` from NextJs directly,\n  and not this file, your lang subpath routing will break.\n*/\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport NextLink from 'next/link';\nimport { withTranslation } from 'react-i18next'; // import { I18n, Config } from '../../types.d'\n\nimport { lngPathCorrector, subpathIsRequired } from '../utils';\nimport nextI18next from '../i18n';\nimport withInternals from '../hocs/with-internals';\n\nvar removeWithTranslationProps = function removeWithTranslationProps(props) {\n  var strippedProps = _Object$assign({}, props);\n\n  delete strippedProps.defaultNS;\n  delete strippedProps.i18n;\n  delete strippedProps.i18nOptions;\n  delete strippedProps.lng;\n  delete strippedProps.reportNS;\n  delete strippedProps.t;\n  delete strippedProps.tReady;\n  delete strippedProps.forwardedRef;\n  return strippedProps;\n};\n\nvar Link =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Link, _React$Component);\n\n  function Link() {\n    _classCallCheck(this, Link);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Link).apply(this, arguments));\n  }\n\n  _createClass(Link, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          as = _this$props.as,\n          children = _this$props.children,\n          href = _this$props.href,\n          i18n = _this$props.i18n,\n          nextI18NextInternals = _this$props.nextI18NextInternals,\n          props = _objectWithoutProperties(_this$props, [\"as\", \"children\", \"href\", \"i18n\", \"nextI18NextInternals\"]);\n\n      console.log('*', this.props);\n      var language = i18n.language;\n      var config = nextI18NextInternals.config;\n\n      if (subpathIsRequired(config, language)) {\n        var _lngPathCorrector = lngPathCorrector(config, {\n          as: as,\n          href: href\n        }, language),\n            correctedAs = _lngPathCorrector.as,\n            correctedHref = _lngPathCorrector.href;\n\n        return __jsx(NextLink, _extends({\n          href: correctedHref,\n          as: correctedAs\n        }, removeWithTranslationProps(props)), children);\n      }\n\n      return __jsx(NextLink, _extends({\n        href: href,\n        as: as\n      }, removeWithTranslationProps(props)), children);\n    }\n  }]);\n\n  return Link;\n}(React.Component);\n\nLink.propTypes = {\n  as: PropTypes.string,\n  children: PropTypes.node.isRequired,\n  href: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\n  nextI18NextInternals: PropTypes.shape({\n    config: PropTypes.shape({\n      defaultLanguage: PropTypes.string.isRequired,\n      localeSubpaths: PropTypes.object.isRequired\n    }).isRequired\n  }).isRequired,\n  i18n: PropTypes.object\n};\nvar nextI18NextInternals = {\n  config: nextI18next.config,\n  i18n: nextI18next.i18n\n};\n/*\n  Usage of `withTranslation` here is just to\n  force `Link` to rerender on language change\n*/\n\nexport default withInternals(withTranslation()(Link), nextI18NextInternals);","map":{"version":3,"sources":["/Users/kartheek/Desktop/zenrays/next/lang/simple/components/Link.js"],"names":["React","PropTypes","NextLink","withTranslation","lngPathCorrector","subpathIsRequired","nextI18next","withInternals","removeWithTranslationProps","props","strippedProps","defaultNS","i18n","i18nOptions","lng","reportNS","t","tReady","forwardedRef","Link","as","children","href","nextI18NextInternals","console","log","language","config","correctedAs","correctedHref","Component","propTypes","string","node","isRequired","oneOfType","object","shape","defaultLanguage","localeSubpaths"],"mappings":"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","sourcesContent":["/*\n  This `Link` component is a wrap of the standard\n  NextJs `Link` component, with some simple lang\n  redirect logic in place.\n  If you haven't already, read this issue comment:\n  https://github.com/zeit/next.js/issues/2833#issuecomment-414919347\n  This component automatically provides this functionality:\n  <Link href=\"/product?slug=something\" as=\"/products/something\">\n  Wherein `slug` is actually our i18n lang, and it gets\n  pulled automatically.\n  Very important: if you import `Link` from NextJs directly,\n  and not this file, your lang subpath routing will break.\n*/\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport NextLink from 'next/link'\nimport { withTranslation } from 'react-i18next'\n\n// import { I18n, Config } from '../../types.d'\nimport { lngPathCorrector, subpathIsRequired } from '../utils'\nimport nextI18next from '../i18n'\nimport withInternals from '../hocs/with-internals'\n\nconst removeWithTranslationProps = (props) => {\n  const strippedProps = Object.assign({}, props)\n  delete strippedProps.defaultNS\n  delete strippedProps.i18n\n  delete strippedProps.i18nOptions\n  delete strippedProps.lng\n  delete strippedProps.reportNS\n  delete strippedProps.t\n  delete strippedProps.tReady\n  delete strippedProps.forwardedRef\n  return strippedProps\n}\n\nclass Link extends React.Component {\n\n  render() {\n    const {\n      as, children, href, i18n, nextI18NextInternals, ...props\n    } = this.props\n    console.log('*', this.props)\n    const { language } = i18n\n    const { config } = nextI18NextInternals\n\n    if (subpathIsRequired(config, language)) {\n      const { as: correctedAs, href: correctedHref } = lngPathCorrector(\n        config, { as, href }, language,\n      )\n      return (\n        <NextLink\n          href={correctedHref}\n          as={correctedAs}\n          {...removeWithTranslationProps(props)}\n        >\n          {children}\n        </NextLink>\n      )\n    }\n\n    return (\n      <NextLink\n        href={href}\n        as={as}\n        {...removeWithTranslationProps(props)}\n      >\n        {children}\n      </NextLink>\n    )\n  }\n}\n\nLink.propTypes = {\n    as: PropTypes.string,\n    children: PropTypes.node.isRequired,\n    href: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.object,\n    ]).isRequired,\n    nextI18NextInternals: PropTypes.shape({\n        config: PropTypes.shape({\n        defaultLanguage: PropTypes.string.isRequired,\n        localeSubpaths: PropTypes.object.isRequired,\n        }).isRequired,\n    }).isRequired,\n    i18n: PropTypes.object,\n}\n\nconst nextI18NextInternals = { config: nextI18next.config, i18n: nextI18next.i18n }\n\n/*\n  Usage of `withTranslation` here is just to\n  force `Link` to rerender on language change\n*/\nexport default withInternals(withTranslation()(Link), nextI18NextInternals)"]},"metadata":{},"sourceType":"module"}