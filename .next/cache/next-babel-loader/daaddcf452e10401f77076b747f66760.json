{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport fetch from 'isomorphic-unfetch';\nimport { i18n, Link, withTranslation } from '../../i18n';\nimport Header from '../../components/Header';\nimport Footer from '../../components/Footer';\nimport User from '../../components/User';\n\nvar Users = function Users(_ref) {\n  var t = _ref.t,\n      users = _ref.users;\n  return __jsx(React.Fragment, null, __jsx(\"main\", null, __jsx(Header, null), __jsx(\"div\", null, users.map(function (user, index) {\n    return __jsx(User, {\n      user: user,\n      key: \"user-\".concat(index)\n    });\n  }), __jsx(\"h2\", null, \"Hey\"))), __jsx(Footer, null));\n};\n\nUsers.getInitialProps =\n/*#__PURE__*/\n_asyncToGenerator(\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee() {\n  var response, payload;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return fetch('https://jsonplaceholder.typicode.com/users');\n\n        case 2:\n          response = _context.sent;\n          _context.next = 5;\n          return response.json();\n\n        case 5:\n          payload = _context.sent;\n          return _context.abrupt(\"return\", {\n            users: payload,\n            namespacesRequired: ['translation']\n          });\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nUsers.propTypes = {\n  t: PropTypes.func.isRequired\n};\nexport default withTranslation('translation')(Users);","map":{"version":3,"sources":["/Users/kartheek/Desktop/zenrays/next/lang/simple/pages/users/index.js"],"names":["React","PropTypes","fetch","i18n","Link","withTranslation","Header","Footer","User","Users","t","users","map","user","index","getInitialProps","response","json","payload","namespacesRequired","propTypes","func","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,eAArB,QAA4C,YAA5C;AAEA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;;AAGA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAkB;AAAA,MAAfC,CAAe,QAAfA,CAAe;AAAA,MAAZC,KAAY,QAAZA,KAAY;AAC9B,SACE,MAAC,KAAD,CAAO,QAAP,QACI,oBACE,MAAC,MAAD,OADF,EAEE,mBAEIA,KAAK,CAACC,GAAN,CAAU,UAACC,IAAD,EAAOC,KAAP,EAAiB;AACzB,WACE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAED,IAAZ;AAAkB,MAAA,GAAG,iBAAUC,KAAV;AAArB,MADF;AAGD,GAJD,CAFJ,EAQE,wBARF,CAFF,CADJ,EAcI,MAAC,MAAD,OAdJ,CADF;AAmBD,CApBD;;AAsBAL,KAAK,CAACM,eAAN;AAAA;AAAA;AAAA;AAAA,yBAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACCb,KAAK,CAAC,4CAAD,CADN;;AAAA;AAChBc,UAAAA,QADgB;AAAA;AAAA,iBAEAA,QAAQ,CAACC,IAAT,EAFA;;AAAA;AAEhBC,UAAAA,OAFgB;AAAA,2CAGf;AACLP,YAAAA,KAAK,EAAEO,OADF;AAELC,YAAAA,kBAAkB,EAAE,CAAC,aAAD;AAFf,WAHe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;AASAV,KAAK,CAACW,SAAN,GAAkB;AAChBV,EAAAA,CAAC,EAAET,SAAS,CAACoB,IAAV,CAAeC;AADF,CAAlB;AAIA,eAAejB,eAAe,CAAC,aAAD,CAAf,CAA+BI,KAA/B,CAAf","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport fetch from 'isomorphic-unfetch';\n\nimport { i18n, Link, withTranslation } from '../../i18n'\n\nimport Header from '../../components/Header'\nimport Footer from '../../components/Footer'\nimport User from '../../components/User'\n\n\nconst Users = ({ t, users }) => {\n  return(\n    <React.Fragment>\n        <main>\n          <Header />\n          <div>\n            {\n              users.map((user, index) => {\n                return(\n                  <User user={user} key={`user-${index}`} />\n                );\n              })\n            }\n            <h2>Hey</h2>\n          </div>\n        </main>\n        <Footer />\n      </React.Fragment>\n  );\n  \n}\n\nUsers.getInitialProps = async () => {\n  const response = await fetch('https://jsonplaceholder.typicode.com/users');\n  const payload = await response.json();\n  return { \n    users: payload,\n    namespacesRequired: ['translation'],\n  }\n}\n\nUsers.propTypes = {\n  t: PropTypes.func.isRequired,\n}\n\nexport default withTranslation('translation')(Users)\n"]},"metadata":{},"sourceType":"module"}